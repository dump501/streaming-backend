openapi: 3.0.3
info:
  title: Article API
  description: |
    This API Spec is for articles management and the description
    can span on many lines
  version: 1.0.0
  license:
    name: 2023, LGNE Consulting Sarl
    url: https://lgne-group.cm
tags:
  - name: Auth
    description: Endpoints for authentication related operations
  - name: User
    description: Endpoints to manipulate Users related stuff
  - name: Role
    description: Endpoints to manipulate students related stuff
  - name: Channel
    description: Endpoints to manipulate channels related stuff
  - name: Video
    description: Endpoints to manipulate videos related stuff
  - name: Comment
    description: Endpoints to manipulate comments related stuff
  - name: Playlist
    description: Endpoints to manipulate playlists related stuff
paths:

# public routes
  /:
    $ref: apiSpec/paths/front.yml
  /auth/login:
    post:
      summary: Endpoint to log a user in and get jwt token
      description: This endpoint receive a LoginRequest, then return a jwt
      operationId: login
      tags:
        - Auth
      requestBody:
        description: This is the request body received for user login
        content:
          application/json:
            schema:
              $ref: 'apiSpec/components/requestBodies/LoginRequest.yml'
      responses:
        '201':
          description: Jwt token generated
          content:
            application/json:
              schema:
                $ref: 'apiSpec/components/schemas/LoginResponse.yml'
  /auth/register:
    post:
      summary: Endpoint to register a user
      description: This endpoint receive a RegisterRequest, then register a user
      operationId: register
      tags:
        - Auth
      requestBody:
        description: This is the request body received for User registration
        content:
          application/json:
            schema:
              $ref: 'apiSpec/components/requestBodies/RegisterRequest.yml'
      responses:
        '201':
          description: User registrated
          content:
            application/json:
              schema:
                $ref: 'apiSpec/components/schemas/UserDto.yml'
  /user:
    $ref: apiSpec/paths/user.yml
  /role:
    $ref: apiSpec/paths/role.yml
  /channel:
    $ref: apiSpec/paths/channel.yml
  /comment:
    $ref: apiSpec/paths/comment.yml
  /playlist:
    $ref: apiSpec/paths/playlist.yml
  /video:
    $ref: apiSpec/paths/video.yml

## user routes
#  /user/profile:
#    $ref: apiSpec/paths/user.yml
#
## admin routes
#  admin/user:
#    $ref: apiSpec/paths/user.yml
#  admin/role:
#    $ref: apiSpec/paths/role.yml
#  admin/channel:
#    $ref: apiSpec/paths/channel.yml
#  admin/comment:
#    $ref: apiSpec/paths/comment.yml
#  admin/playlist:
#    $ref: apiSpec/paths/playlist.yml
#  admin/video:
#    $ref: apiSpec/paths/video.yml
#
## manager routes
#  manager/user:
#    $ref: apiSpec/paths/manager/user.yml
#  manager/channel:
#    $ref: apiSpec/paths/manager/channel.yml
#  manager/playlist:
#    $ref: apiSpec/paths/manager/playlist.yml
#  manager/video:
#    $ref: apiSpec/paths/manager/video.yml
